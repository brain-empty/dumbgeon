#if !defined(ASCII_H)
#define ASCII_H
#include<iostream>
#include"player.h"


void printTitle(){
    std::cout << R"(                                                                                    
      @@@@@@@   @@@  @@@  @@@@@@@@@@   @@@@@@@    @@@@@@@@  @@@@@@@@   @@@@@@   @@@  @@@  
      @@@@@@@@  @@@  @@@  @@@@@@@@@@@  @@@@@@@@  @@@@@@@@@  @@@@@@@@  @@@@@@@@  @@@@ @@@  
      @@!  @@@  @@!  @@@  @@! @@! @@!  @@!  @@@  !@@        @@!       @@!  @@@  @@!@!@@@  
      !@!  @!@  !@!  @!@  !@! !@! !@!  !@   @!@  !@!        !@!       !@!  @!@  !@!!@!@!  
      @!@  !@!  @!@  !@!  @!! !!@ @!@  @!@!@!@   !@! @!@!@  @!!!:!    @!@  !@!  @!@ !!@!  
      !@!  !!!  !@!  !!!  !@!   ! !@!  !!!@!!!!  !!! !!@!!  !!!!!:    !@!  !!!  !@!  !!!  
      !!:  !!!  !!:  !!!  !!:     !!:  !!:  !!!  :!!   !!:  !!:       !!:  !!!  !!:  !!!  
      :!:  !:!  :!:  !:!  :!:     :!:  :!:  !:!  :!:   !::  :!:       :!:  !:!  :!:  !:!  
      :::: ::  ::::: ::  :::     ::    :: ::::   ::: ::::   :: ::::  ::::: ::   ::   ::  
      :: :  :    : :  :    :      :    :: : ::    :: :: :   : :: ::    : :  :   ::    :   
    )";
}

void printWin () {
    std::cout << R"(
                          _,.---._                                  ,-.-.    .=-.-.  .-._         
      ,--.-.  .-,--.   ,-.' , -  `.    .--.-. .-.-.       ,-..-.-./  \==\  /==/_ / /==/ \  .-._  
      /==/- / /=/_ /   /==/_,  ,  - \  /==/ -|/=/  |       |, \=/\=|- |==| |==|, |  |==|, \/ /, / 
      \==\, \/=/. /   |==|   .=.     | |==| ,||=| -|       |- |/ |/ , /==/ |==|  |  |==|-  \|  |  
      \==\  \/ -/    |==|_ : ;=:  - | |==|- | =/  |        \, ,     _|==| |==|- |  |==| ,  | -|  
        |==|  ,_/     |==| , '='     | |==|,  \/ - |        | -  -  , |==| |==| ,|  |==| -   _ |  
        \==\-, /       \==\ -    ,_ /  |==|-   ,   /         \  ,  - /==/  |==|- |  |==|  /\ , |  
        /==/._/         '.='. -   .'   /==/ , _  .'          |-  /\ /==/   /==/. /  /==/, | |- |  
        `--`-`            `--`--''     `--`..---'            `--`  `--`    `--`-`   `--`./  `--`  
      )";
}

void printDungeonCleared () {
    std::cout << R"(
                                    .-._               _,---.        ,----.      _,.---._      .-._                  _,.----.                    ,----.     ,---.                         ,----.                
        _,..---._    .--.-. .-.-. /==/ \  .-._    _.='.'-,  \    ,-.--` , \   ,-.' , -  `.   /==/ \  .-._         .' .' -   \     _.-.       ,-.--` , \  .--.'  \       .-.,.---.     ,-.--` , \   _,..---._   
      /==/,   -  \  /==/ -|/=/  | |==|, \/ /, /  /==.'-     /   |==|-  _.-`  /==/_,  ,  - \  |==|, \/ /, /       /==/  ,  ,-'   .-,.'|      |==|-  _.-`  \==\-/\ \     /==/  `   \   |==|-  _.-` /==/,   -  |  
      |==|   _   _\ |==| ,||=| -| |==|-  \|  |  /==/ -   .-'    |==|   `.-. |==|   .=.     | |==|-  \|  |        |==|-   |  .  |==|, |      |==|   `.-.  /==/-|_\ |   |==|-, .=., |  |==|   `.-. |==|   _   _| 
      |==|  .=.   | |==|- | =/  | |==| ,  | -|  |==|_   /_,-.  /==/_ ,    / |==|_ : ;=:  - | |==| ,  | -|        |==|_   `-' \ |==|- |     /==/_ ,    /  \==\,   - \  |==|   '='  / /==/_ ,    / |==|  .=.   | 
      |==|,|   | -| |==|,  \/ - | |==| -   _ |  |==|  , \_.' ) |==|    .-'  |==| , '='     | |==| -   _ |        |==|   _  , | |==|, |     |==|    .-'   /==/ -   ,|  |==|- ,   .'  |==|    .-'  |==|,|   | -| 
      |==|  '='   / |==|-   ,   / |==|  /\ , |  \==\-  ,    (  |==|_  ,`-._  \==\ -    ,_ /  |==|  /\ , |        \==\.       / |==|- `-._  |==|_  ,`-._ /==/-  /\ - \ |==|_  . ,'.  |==|_  ,`-._ |==|  '='   / 
      |==|-,   _`/  /==/ , _  .'  /==/, | |- |   /==/ _  ,  /  /==/ ,     /   '.='. -   .'   /==/, | |- |         `-.`.___.-'  /==/ - , ,/ /==/ ,     / \==\ _.\=\.-' /==/  /\ ,  ) /==/ ,     / |==|-,   _`/  
      `-.`.____.'   `--`..---'    `--`./  `--`   `--`------'   `--`-----``      `--`--''     `--`./  `--`                      `--`-----'  `--`-----``   `--`         `--`-`--`--'  `--`-----``  `-.`.____.'   
      )";
    std::cout << "1. return to tavern\n";
    int temp;
    std::cin >> temp;
}

void showHealth(int Health, int maxHealth) {
      
    int i;

    std::cout << std::endl << "[";

    for (i=0; i < Health; i++) 
    { 
        std::cout << R"(#)";
    }
    for (Health; Health < maxHealth; Health++) {
        std::cout << R"(-)";
    }
    std::cout << "]" << std::endl;
}

void printDashboard (int pHealth, int pMaxHealth, int pCoins, int pExp, int pLvl) {
  std::cout << "\n=========\n";
  std::cout << "Your Health: \n";
  showHealth (pHealth, pMaxHealth);
  std::cout << "Your coins: " << pCoins <<std::endl;
  std::cout << "Your exp: " << pExp <<std::endl;
  std::cout << "Your level: " << pLvl <<std::endl;
  if (canLevelUp (pLvl, pExp)) std::cout << "LEVEL UP AVAILAIBLE (check store)";
  std::cout << "\n=========\n";
}

void printDead(){
  std::cout << R"(                    _,.---._                                         .=-.-.      ,----.                
 ,--.-.  .-,--.   ,-.' , -  `.    .--.-. .-.-.         _,..---._    /==/_ /   ,-.--` , \   _,..---._   
/==/- / /=/_ /   /==/_,  ,  - \  /==/ -|/=/  |       /==/,   -  \  |==|, |   |==|-  _.-` /==/,   -  | 
\==\, \/=/. /   |==|   .=.     | |==| ,||=| -|       |==|   _   _\ |==|  |   |==|   `.-. |==|   _   _| 
 \==\  \/ -/    |==|_ : ;=:  - | |==|- | =/  |       |==|  .=.   | |==|- |  /==/_ ,    / |==|  .=.   | 
  |==|  ,_/     |==| , '='     | |==|,  \/ - |       |==|,|   | -| |==| ,|  |==|    .-'  |==|,|   | -| 
  \==\-, /       \==\ -    ,_ /  |==|-   ,   /       |==|  '='   / |==|- |  |==|_  ,`-._ |==|  '='   / 
  /==/._/         '.='. -   .'   /==/ , _  .'        |==|-,   _`/  /==/. /  /==/ ,     / |==|-,   _`/  
  `--`-`            `--`--''     `--`..---'          `-.`.____.'   `--`-`   `--`-----``  `-.`.____.'   
)";
  std::cout << std::endl << "1. Wake up in a tavern\n";
  int temp;
  std::cin >> temp;
}

void clrscr() {
    system("cls");  

}

#endif